- name: Setup sudo
  hosts: servers
  become: true
  vars:
    users: # Add future sudo users to this list
      - glade
  tasks:
    - name: Install sudo
      ansible.builtin.apt:
        name: sudo
        state: present

    - name: Ensure 'devs' group exists
      ansible.builtin.group:
        name: devs
        state: present

    - name: Add group 'devs' to sudoers
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%devs"
        line: "%devs ALL=(ALL:ALL) ALL "
        validate: "visudo -cf %s"

    - name: Add sudoers users to devs group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: devs
        append: true
        state: present
        createhome: true
      with_items: "{{ users }}"

- name: Setup Git
  hosts: servers
  become: true
  tasks:
    - name: Install Git
      ansible.builtin.apt:
        name: git
        state: present

    - name: Setup git user
      community.general.git_config:
        name: user.name
        scope: global
        value: glade

    - name: Setup git email
      community.general.git_config:
        name: user.email
        scope: global
        value: owloftheglade@gmail.com

- name: Setup Docker
  hosts: servers
  become: true
  tasks:
    - name: Install aptitude
      ansible.builtin.apt:
        name: aptitude
        state: present
        update_cache: true

    - name: Install required system packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: present
        update_cache: true

    - name: Add Docker GPG apt key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: present
        update_cache: true

- name: Setup KVM
  hosts: servers
  become: true
  tasks:
    - name: Install KVM dependancies
      ansible.builtin.apt:
        pkg:
          - qemu-kvm
          - libvirt-clients
          - libvirt-daemon-system
          - bridge-utils
          - virtinst
          - libvirt-daemon
        state: present
        update_cache: true

    - name: Check if network is active
      ansible.builtin.shell: sudo virsh net-info default | grep Active | grep yes
      register: result
      ignore_errors: true

    - name: Setup net-start
      ansible.builtin.command: sudo virsh net-start default
      when: result.stdout == ""

    - name: Setup net-autostart
      ansible.builtin.command: sudo virsh net-autostart default

    - name: Add vhost_net
      community.general.modprobe:
        name: vhost_net
        state: present

    - name: Setup Bridge
      ansible.builtin.blockinfile:
        path: /etc/network/interfaces
        block: | # Need to update this to account for other IPs
          #Configure bridge and give it a static ip
          auto br0
          iface br0 inet dhcp
                  bridge_ports {{ ansible_default_ipv4.interface }}
#                  address 192.168.1.80
#                  netmask 255.255.255.0
#                  network {{ ansible_default_ipv4.gateway }}
#                  broadcast {{ ansible_default_ipv4.gateway }}
#                  gateway {{ ansible_default_ipv4.gateway }}
#                  bridge_stp off
#                  bridge_fd 0
#                  bridge_maxwait 0
#                  dns-nameservers 8.8.8.8 4.4.2.2
        backup: true

    - name: Restart Network Manager
      ansible.builtin.systemd:
        name: networking
        state: restarted

- name: Install Misc Packages
  hosts: servers
  become: true
  tasks:
    - name: Install Misc Packages
      ansible.builtin.apt:
        pkg:
          - wakeonlan
        state: present
        update_cache: true